--- 
layout: post
title: Web services security mit WS-Security, Teil 1
date: 2009-02-05 16:42:00 +01:00
permalink: /articles/126/
comments: true
categories: 
- Web-Services
- Java
---
Zur Zeit arbeite ich in einem grÃ¶ÃŸeren Kundenprojekt, das Schnittstellen Ã¼ber das Internet nach aussen anbietet. Ãœber diese Schnittstellen werden unter anderem externe Buchungssysteme integriert. Als Basistechnologie werden Web Services eingesetzt. Die Verbindung wird Ã¼ber das Internet hergestellt. 

Da sensitive sprich wertvolle Daten (z.B. Zahlungsdaten) Ã¼bertragen werden, ist es natÃ¼rlich extrem wichtig die Vertraulichkeit der Ãœbertragung zu gewÃ¤hrleisten. Zum einen mÃ¶chte man verhindern, dass die Kommunikation belauscht werden kann. Zum anderen muss man sich sicher sein, dass das angebundene System wirklich das ist fÃ¼r das es sich ausgibt, um beispielsweise eine "Man in the middle attack":http://de.wikipedia.org/wiki/Man-In-The-Middle-Angriff zu verhindern. D. h. es muss eine gegenseitige "Authentifizierung":http://de.wikipedia.org/wiki/Authentifizierung stattfinden.

Um das zu gewÃ¤hrleisten bietet sich WS-Security an. WS-Security ist einer der unzÃ¤hligen Web Services Standards. WS-Security bietet hierzu verschiedene MÃ¶glichkeiten an, die einem erst einmal die Entscheidung nicht einfach machen, welche man denn nun nehmen soll. In den nÃ¤chsten EintrÃ¤gen hier in diesem "Blog":http://www.datazoo.de/ werde ich auf die gemachten Erfahrungen und theoretischen HintergrÃ¼nde eingehen.

Gerade weil es oft nicht so einfach gelingt, WS-Security ohne Anfangsprobleme einzusetzen, ist ein VerstÃ¤ndnis der Grundlagen unverzichtbar. Wenn dann noch Java und .NET miteinander kommunizieren sollen, erhÃ¶ht man den Schwierigkeitsgrad erheblich, wie sich zeigte.

Hinzu kommen FachausdrÃ¼cke wie Asymmetrisches Kryptosystem, Digitale Zertifikate, Public Key und Private Key etc., die einem den Einstieg auch nicht wirklich einfach machen. Viele Web Services laufen daher unverschlÃ¼sselt oder man setzt auf eine SSL-basierte VerschlÃ¼sselung der gesamten Verbindung (man denke einfach an https), was auch so einige Nachteile hat (doch dazu spÃ¤ter mehr). Es ist also ein spannendes und vielschichtiges Thema.


Fortsetzung folgt ...

